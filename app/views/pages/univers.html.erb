
<div class="home-page-container">
  <!-- ================== div video ===================== -->

  <div class="hero-video">

    <div class="home-fondu-haut"></div>


    <!-- ============= NAVBAR ============== -->
    <div class="home-nav">
      <div class="home-nav-left">
        <!-- <%= link_to "Merlimont", "#" %> -->

        <%= link_to root_path do %>
          <%= image_tag('home/MerlimontB.png') %>
        <% end %>

      </div>


      <div class="home-nav-right-new">

          <svg class="svg-pfff galn">
            <g
              fill="black"
              stroke="white"
              stroke-width="6"
              stroke-linejoin="round"
              text-anchor="middle">
              <text x="50%" y="70%" paint-order="stroke" id="stroke-under">
                <%= link_to "Galerie", galerie_path %>
              </text>
            </g>
          </svg>


          <!--
          <svg class="svg-pfff webn">
            <g
              fill="black"
              stroke="white"
              stroke-width="6"
              stroke-linejoin="round"
              text-anchor="middle">
              <text x="50%" y="70%" paint-order="stroke" id="stroke-under">
                <%= link_to "Webcam", "https://www.viewsurf.com/univers/surf/vue/16762-france-nord-pas-de-calais-merlimont-live", target: "_blank" %>
              </text>
            </g>
          </svg>
          -->



          <svg class="svg-pfff faunen">
            <g
              fill="black"
              stroke="white"
              stroke-width="6"
              stroke-linejoin="round"
              text-anchor="middle">
              <text x="50%" y="70%" paint-order="stroke" id="stroke-under">
                <%= link_to "Faune & Flore", fauneflore_path(anchor: 'top-of-page'), data: { turbo: false } %>
              </text>
            </g>
          </svg>





          <svg class="svg-pfff foisn">
            <g
              fill="black"
              stroke="white"
              stroke-width="6"
              stroke-linejoin="round"
              text-anchor="middle">
              <text x="50%" y="70%" paint-order="stroke" id="stroke-under">
                <%= link_to "Il etait une fois", merlimontdavant_path %>
              </text>
            </g>
          </svg>



          <svg class="svg-pfff aboutn">
            <g
              fill="black"
              stroke="white"
              stroke-width="6"
              stroke-linejoin="round"
              text-anchor="middle">
              <text x="50%" y="70%" paint-order="stroke" id="stroke-under">
                <%= link_to "A propos", about_path, data: { turbo: false } %>
              </text>
            </g>
          </svg>

      </div>

    </div>

    <!-- ============= FIN NAVBAR ============== -->


    <!-- ============= AVION CERF-VOLANT ============== -->

    <!-- <div class="avion">
      <%= image_tag('home/aviond.png') %>
    </div> -->

    <div class="home-video-circle-container">
      <div class="home-video-circle">
        <div class="kite">
          <%= image_tag('home/kite.png') %>
        </div>
      </div>
    </div>

    <div class="home-video-circle-container-deux">
      <div class="home-video-circle-deux">
        <div class="kite-deux">
          <%= image_tag('home/kite_deux.png') %>
        </div>
      </div>
    </div>

    <div class="home-video-circle-container-trois-un">
      <div class="home-video-circle-trois-un">
        <div class="kite-trois-un">
          <%= image_tag('home/kite_trois_un.png') %>
        </div>
      </div>
    </div>

    <div class="home-video-circle-container-trois-deux">
      <div class="home-video-circle-trois-deux">
        <div class="kite-trois-deux">
          <%= image_tag('home/kite_trois_deux.png') %>
        </div>
      </div>
    </div>

    <div class="home-video-circle-container-trois-trois">
      <div class="home-video-circle-trois-trois">
        <div class="kite-trois-trois">
          <%= image_tag('home/kite_trois_trois.png') %>
        </div>
      </div>
    </div>

    <!-- ============= AVION CERF-VOLANT ============== -->


    <!-- ============= VIDEO et DUNES ============== -->

    <%= video_tag "home/mainvideo.mp4", type: "video/mp4", autoplay: true, loop: true, muted: true, id: "home-videoo", preload: "auto", playsinline: true %>

    <div class="home-dunes">
      <%= image_tag('home/home_dunes.svg') %>
    </div>

    <div class="home-bas-dunes">
      <div class="home-petite-trace-container">
        <%= image_tag('home/home_petite_trace.svg') %>
      </div>
    </div>

    <!-- ============= FIN VIDEO et DUNES ============== -->


  </div>



  <!-- ================== div presentation ===================== -->


  <div class="home-presentation-div">

    <div class="home-traces">
      <%= image_tag('home/home_trace.svg') %>
    </div>

    <div class="home-presentation-title-and-title-shadow">

      <div class="home-presentation-title-shadow">
        <div class="home-presentation-parasol-container">
          <h1>Merlimont</h1>
          <div class="home-presentation-parasol">
            <%= image_tag('home/parasol.svg') %>
          </div>
        </div>
      </div>

      <div class="home-presentation-title">
          <svg class="">
            <g
              fill="#007CD7"
              stroke="white"
              stroke-width="10"
              stroke-linejoin="round"
              text-anchor="middle">
              <text x="50%" y="50%" paint-order="stroke" id="stroke-under">
                Merlimont
              </text>
            </g>
          </svg>
      </div>
    </div>

    <div class="home-presentation-text-picture">

      <div class="home-presentation-text">
        <div class="home-presentaion-text-text">
          <%= image_tag('home/text-presentation.svg', class: 'text-presentation') %>
        </div>
        <div class="home-presentation-trace-trait">
          <%= image_tag('home/home_trace_trait.svg') %>
        </div>
      </div>

      <div class="home-presentation-photo">
        <%= image_tag('home/home_coeur.svg') %>
      </div>

    </div>

    <div class="home-activites-vague-haut">
      <%= image_tag('home/home_vague_haut.png') %>
      <div class="wave"></div>
    </div>

  </div>




  <!-- ================== div activites ===================== -->




  <div class="home-activites-div">

    <div class="home-activites-trait-anti-bug">
    </div>

    <div class="home-activites-swim">
      <%= image_tag('emojies/man_ball.svg') %>
    </div>

    <div class="home-activites-surf">
      <%= image_tag('emojies/surfer_orange.svg') %>
    </div>

    <div class="home-activites-title-and-title-shadow">

      <div class="home-activites-title-shadow">
        <h1>Activités</h1>
      </div>

      <div class="home-activites-title">
        <h1>Activités</h1>
      </div>

      <div class="home-activites-subtitle">
        <!-- <p>Top 5</p> -->
      </div>

    </div>



    <div class="home-activite-container">
      <div class="home-activite-card-carousel">

        <div class="card" id="1">

          <div class="card-div-image">
            <div class="image-container" style="background-image: url('<%= cl_image_path(@activites[0].photo.key) %>');">
            </div>
          </div>

          <div class="card-div-text">
            <p class="activite-title"><%= @activites[0].title %></p>
            <%= link_to "Voir plus", activite_path(@activites[0]) %>
          </div>

        </div>

        <div class="card" id="2">

          <div class="card-div-image">
            <div class="image-container" style="background-image: url('<%= cl_image_path(@activites[1].photo.key) %>');">
            </div>
          </div>

          <div class="card-div-text">
            <p class="activite-title"><%= @activites[1].title %></p>
            <%= link_to "Voir plus", activite_path(@activites[1]) %>
          </div>

        </div>

        <div class="card" id="3">

          <div class="card-div-image">
            <div class="image-container" style="background-image: url('<%= cl_image_path(@activites[2].photo.key) %>');">
            </div>
          </div>

          <div class="card-div-text">
            <p class="activite-title"><%= @activites[2].title %></p>
            <%= link_to "Voir plus", activite_path(@activites[2]) %>
          </div>

        </div>

        <div class="card" id="4">

          <div class="card-div-image">
            <div class="image-container" style="background-image: url('<%= cl_image_path(@activites[3].photo.key) %>');">
            </div>
          </div>

          <div class="card-div-text">
            <p class="activite-title"><%= @activites[3].title %></p>
            <%= link_to "Voir plus", activite_path(@activites[3]) %>
          </div>
        </div>

        <div class="card" id="5">

          <div class="card-div-image">
            <div class="image-container" style="background-image: url('<%= cl_image_path(@activites[4].photo.key) %>');">
            </div>
          </div>

          <div class="card-div-text">
            <p class="activite-title"><%= @activites[4].title %></p>
            <%= link_to "Voir plus", activite_path(@activites[4]) %>
          </div>
        </div>

      </div>
      <a href="#" class="visuallyhidden card-controller">Carousel controller</a>
    </div>



      <div class="home-activites-button">
        <div class="home-activites-button-img-container">
          <%= link_to activites_path do%>
            <%= image_tag('activites/boue_button.svg') %>
          <% end %>
        </div>
      </div>

  </div>




  <!-- ================== div logements ===================== -->


  <div class="home-logements-div">

    <div class="home-emplacement-para">
      <%= image_tag('logements/para.svg') %>
    </div>


    <div class="home-logement-vague-haut">
      <div class="wave"></div>
      <%= image_tag('activites/activites_vague_bas.png') %>
    </div>




    <div class="home-logement-title-and-title-shadow">
      <div class="home-logement-title-shadow">
        <h1>Nos logements</h1>
      </div>

      <div class="home-logement-title">
        <svg class="">
          <g
            fill="#007CD7"
            stroke="white"
            stroke-width="10"
            stroke-linejoin="round"
            text-anchor="middle">
            <text x="50%" y="50%" paint-order="stroke" id="stroke-under">
              Nos logements
            </text>
          </g>
        </svg>
      </div>
    </div>


    <div class="home-logement-categories-container">

      <div class="home-logement-grid-container">


        <%= link_to logements_path(categorie: 'camping'), class: 'home-logement-categories-owner' do %>
          <div class="cardtest">
            <div class="wrapper">
              <%= image_tag('activites/mobilehomes.jpg', class: 'cover-image') %>
            </div>
            <%= image_tag('logements/campingtext.png', class: 'title') %>
            <%= image_tag('activites/tente1.png', class: 'character') %>
          </div>
        <% end %>

        <%= link_to logements_path(categorie: 'location'), class: 'home-logement-categories-owner' do %>
          <div class="cardtest">
            <div class="wrapper">
              <%= image_tag('logements/location1.jpg', class: 'cover-image') %>
            </div>
            <%= image_tag('logements/locationtext.png', class: 'title') %>
            <%= image_tag('logements/locationnew1.png', class: 'character') %>
          </div>
        <% end %>

        <%= link_to logements_path(categorie: 'hote'), class: 'home-logement-categories-owner' do %>
          <div class="cardtest">
            <div class="wrapper">
              <%= image_tag('logements/hote.jpg', class: 'cover-image') %>
            </div>
            <%= image_tag('logements/hotetext.png', class: 'title') %>
            <%= image_tag('logements/hote1.png', class: 'character') %>
          </div>
        <% end %>

        <%= link_to logements_path(categorie: 'camping-car'), class: 'home-logement-categories-owner' do %>
          <div class="cardtest">
            <div class="wrapper">
              <%= image_tag('logements/caravane.jpg', class: 'cover-image') %>

            </div>
            <%= image_tag('logements/ccartext.png', class: 'title') %>
            <%= image_tag('logements/ccar2.png', class: 'character') %>
          </div>
        <% end %>
      </div>



    </div>

    <div class="home-btn-logement-boue-container">
      <%= link_to logements_path do%>
        <%= image_tag('activites/boue_button.svg') %>
      <% end %>
    </div>

    <!-- ================== div vague au dessus de emplacement ===================== -->

    <div class="vague-emplacement-top">

      <%= image_tag('emplacements/emplacement_vague.png') %>

      <div class="home-emplacement-surfer">
        <%= image_tag('emojies/surfer_orange.svg') %>
      </div>

      <div class="wave"></div>


    </div>

  </div>





  <!-- ================== div emplacements ===================== -->

  <div class="home-emplacement-div">

    <div class="home-emplacement-title-and-title-shadow">
      <div class="home-emplacement-title-shadow">
        <h1>Emplacements</h1>
      </div>

      <div class="home-emplacement-title">
        <h1>Emplacements</h1>
      </div>
    </div>

    <div class="home-emplacement-map">
      <%= image_tag('emplacements/emplacement_map.png') %>
    </div>

    <div class="home-emplacement-btn">
      <%= link_to activites_path do%>
        <%= image_tag('activites/boue_button.svg') %>
      <% end %>
    </div>

    <div class="home-emplacement-bulle">
      <%= image_tag('emplacements/bulle.svg') %>
    </div>

    <div class="home-emplacement-algues">
      <%= image_tag('emplacements/algues.svg') %>
    </div>



  </div>
</div>


<script>
  const cardsContainer = document.querySelector(".home-activite-card-carousel");
  const cardsController = document.querySelector(".home-activite-card-carousel + .card-controller")

  class DraggingEvent {
    constructor(target = undefined) {
      this.target = target;
    }

    event(callback) {
      let handler;

      this.target.addEventListener("mousedown", e => {
        e.preventDefault()

        handler = callback(e)

        window.addEventListener("mousemove", handler)

        document.addEventListener("mouseleave", clearDraggingEvent)

        window.addEventListener("mouseup", clearDraggingEvent)

        function clearDraggingEvent() {
          window.removeEventListener("mousemove", handler)
          window.removeEventListener("mouseup", clearDraggingEvent)
          document.removeEventListener("mouseleave", clearDraggingEvent)

          handler(null)
        }
      })

      this.target.addEventListener("touchstart", e => {
        handler = callback(e)

        window.addEventListener("touchmove", handler)

        window.addEventListener("touchend", clearDraggingEvent)

        document.body.addEventListener("mouseleave", clearDraggingEvent)

        function clearDraggingEvent() {
          window.removeEventListener("touchmove", handler)
          window.removeEventListener("touchend", clearDraggingEvent)

          handler(null)
        }
      })
    }

    // Get the distance that the user has dragged
    getDistance(callback) {
      function distanceInit(e1) {
        let startingX, startingY;

        if ("touches" in e1) {
          startingX = e1.touches[0].clientX
          startingY = e1.touches[0].clientY
        } else {
          startingX = e1.clientX
          startingY = e1.clientY
        }


        return function(e2) {
          if (e2 === null) {
            return callback(null)
          } else {

            if ("touches" in e2) {
              return callback({
                x: e2.touches[0].clientX - startingX,
                y: e2.touches[0].clientY - startingY
              })
            } else {
              return callback({
                x: e2.clientX - startingX,
                y: e2.clientY - startingY
              })
            }
          }
        }
      }

      this.event(distanceInit)
    }
  }


  class CardCarousel extends DraggingEvent {
    constructor(container, controller = undefined) {
      super(container)

      // DOM elements
      this.container = container
      this.controllerElement = controller
      this.cards = container.querySelectorAll(".card")

      // Carousel data
      this.centerIndex = (this.cards.length - 1) / 2;
      this.cardWidth = this.cards[0].offsetWidth / this.container.offsetWidth * 100
      this.xScale = {};

      // Resizing
      window.addEventListener("resize", this.updateCardWidth.bind(this))

      if (this.controllerElement) {
        this.controllerElement.addEventListener("keydown", this.controller.bind(this))
      }


      // Initializers
      this.build()

      // Bind dragging event
      super.getDistance(this.moveCards.bind(this))
    }

    updateCardWidth() {
      this.cardWidth = this.cards[0].offsetWidth / this.container.offsetWidth * 100

      this.build()
    }

    build(fix = 0) {
      for (let i = 0; i < this.cards.length; i++) {
        const x = i - this.centerIndex;
        const scale = this.calcScale(x)
        const scale2 = this.calcScale2(x)
        const zIndex = -(Math.abs(i - this.centerIndex))

        const leftPos = this.calcPos(x, scale2)


        this.xScale[x] = this.cards[i]

        this.updateCards(this.cards[i], {
          x: x,
          scale: scale,
          leftPos: leftPos,
          zIndex: zIndex
        })
      }
    }


    controller(e) {
      const temp = {...this.xScale};

        if (e.keyCode === 39) {
          // Left arrow
          for (let x in this.xScale) {
            const newX = (parseInt(x) - 1 < -this.centerIndex) ? this.centerIndex : parseInt(x) - 1;

            temp[newX] = this.xScale[x]
          }
        }

        if (e.keyCode == 37) {
          // Right arrow
          for (let x in this.xScale) {
            const newX = (parseInt(x) + 1 > this.centerIndex) ? -this.centerIndex : parseInt(x) + 1;

            temp[newX] = this.xScale[x]
          }
        }

        this.xScale = temp;

        for (let x in temp) {
          const scale = this.calcScale(x),
                scale2 = this.calcScale2(x),
                leftPos = this.calcPos(x, scale2),
                zIndex = -Math.abs(x)

          this.updateCards(this.xScale[x], {
            x: x,
            scale: scale,
            leftPos: leftPos,
            zIndex: zIndex
          })
        }
    }

    calcPos(x, scale) {
      let formula;

      if (x < 0) {
        formula = (scale * 100 - this.cardWidth) / 2

        return formula

      } else if (x > 0) {
        formula = 100 - (scale * 100 + this.cardWidth) / 2

        return formula
      } else {
        formula = 100 - (scale * 100 + this.cardWidth) / 2

        return formula
      }
    }

    updateCards(card, data) {
      if (data.x || data.x == 0) {
        card.setAttribute("data-x", data.x)
      }

      if (data.scale || data.scale == 0) {
        card.style.transform = `scale(${data.scale})`

        if (data.scale == 0) {
          card.style.opacity = data.scale
        } else {
          card.style.opacity = 1;
        }
      }

      if (data.leftPos) {
        card.style.left = `${data.leftPos}%`
      }

      if (data.zIndex || data.zIndex == 0) {
        if (data.zIndex == 0) {
          card.classList.add("highlight")
        } else {
          card.classList.remove("highlight")
        }

        card.style.zIndex = data.zIndex
      }
    }

    calcScale2(x) {
      let formula;

      if (x <= 0) {
        formula = 1 - -1 / 5 * x

        return formula
      } else if (x > 0) {
        formula = 1 - 1 / 5 * x

        return formula
      }
    }

    calcScale(x) {
      const formula = 1 - 1 / 5 * Math.pow(x, 2)

      if (formula <= 0) {
        return 0
      } else {
        return formula
      }
    }

    checkOrdering(card, x, xDist) {
      const original = parseInt(card.dataset.x)
      const rounded = Math.round(xDist)
      let newX = x

      if (x !== x + rounded) {
        if (x + rounded > original) {
          if (x + rounded > this.centerIndex) {

            newX = ((x + rounded - 1) - this.centerIndex) - rounded + -this.centerIndex
          }
        } else if (x + rounded < original) {
          if (x + rounded < -this.centerIndex) {

            newX = ((x + rounded + 1) + this.centerIndex) - rounded + this.centerIndex
          }
        }

        this.xScale[newX + rounded] = card;
      }

      const temp = -Math.abs(newX + rounded)

      this.updateCards(card, {zIndex: temp})

      return newX;
    }

    moveCards(data) {
      let xDist;

      if (data != null) {
        this.container.classList.remove("smooth-return")
        xDist = data.x / 250;
      } else {


        this.container.classList.add("smooth-return")
        xDist = 0;

        for (let x in this.xScale) {
          this.updateCards(this.xScale[x], {
            x: x,
            zIndex: Math.abs(Math.abs(x) - this.centerIndex)
          })
        }
      }

      for (let i = 0; i < this.cards.length; i++) {
        const x = this.checkOrdering(this.cards[i], parseInt(this.cards[i].dataset.x), xDist),
              scale = this.calcScale(x + xDist),
              scale2 = this.calcScale2(x + xDist),
              leftPos = this.calcPos(x + xDist, scale2)


        this.updateCards(this.cards[i], {
          scale: scale,
          leftPos: leftPos
        })
      }
    }
  }

  const carousel = new CardCarousel(cardsContainer)
</script>
